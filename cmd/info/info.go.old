// file: cmd/info/info.go

package info

import (
	"fmt"
	"github.com/ha1tch/plus3/pkg/diskimg"
)

func Info(diskPath string) error {
	disk, err := diskimg.LoadFromFile(diskPath)
	if err != nil {
		return fmt.Errorf("failed to open disk: %v", err)
	}

	dir, err := disk.GetDirectory()
	if err != nil {
		return fmt.Errorf("failed to read directory: %v", err)
	}

	fileCount := 0
	totalSize := 0
	for _, entry := range dir.Entries {
		if !entry.IsDeleted() && !entry.IsUnused() {
			fileCount++
			totalSize += int(entry.LogicalSize) * 128
		}
	}

	fmt.Printf("Disk Image: %s\n\n", diskPath)
	fmt.Printf("Format:     +3DOS\n")
	fmt.Printf("Files:      %d\n", fileCount)
	fmt.Printf("Used:       %dK\n", totalSize/1024)
	fmt.Printf("Free:       %dK\n", (disk.allocation.GetFreeSpace()*diskimg.BytesPerSector)/1024)
	fmt.Printf("Total:      %dK\n", (40*9*512)/1024)

	// Show disk validation status
	validator := diskimg.NewDiskCheck(disk, diskimg.ValidationStrict)
	errors := validator.Validate()
	if len(errors) > 0 {
		fmt.Printf("\nWarnings:\n")
		for _, err := range errors {
			fmt.Printf("- %v\n", err)
		}
	}

	return nil
}